import os
import shlex  # This handles quoted tokens

STUBS_DIR = 'src_libc/stubs'
REGISTRY = 'src_libc/reg_stubs.txt'

os.makedirs(STUBS_DIR, exist_ok=True)

HEADER = '''\

/*
** SPDX-License-Identifier: BSD-3-Clause
** Copyright (c) 2025 Rene W. Olsen
**
** AUTO-GENERATED FILE â€” DO NOT EDIT MANUALLY
** Generated by gen_stubs.py
*/

#include "Stub.h"
'''

# Mapping: 'string_memcpy' -> <string.h>, etc.
INCLUDE_MAP = {
    'stdlib_': 'stdlib.h',
    'string_': 'string.h',
    'strings_': 'strings.h',
    'setjmp_': 'setjmp.h',
}

def deduce_header(iface_func):
    for prefix, header in INCLUDE_MAP.items():
        if iface_func.startswith(prefix):
            return f'#include <{header}>'
    return None

with open(REGISTRY) as f:
    for line in f:
        line = line.strip()
        if not line or line.startswith("#"):
            continue

        # Parse respecting quotes
        try:
            parts = shlex.split(line)
        except ValueError:
            print(f"Skipping line due to parse error: {line}")
            continue

        if len(parts) < 5:
            print(f"Skipping invalid line: {line}")
            continue

        # Properly indented lines here:
        ret, name, iface_func = parts[0:3]
        args_decl = parts[3]
        args_call = ' '.join(parts[4:])

        filename = os.path.join(STUBS_DIR, f"{name}.c")
        header_include = deduce_header(iface_func)

        with open(filename, 'w') as out:
            out.write(HEADER)
            if header_include:
                out.write(f"{header_include}\n")
            out.write("\n")
            out.write(f"LIBC_STUB({ret}, {name}, {iface_func}, ({args_decl}), {args_call});\n")

        print(f"Generated: {filename}")
